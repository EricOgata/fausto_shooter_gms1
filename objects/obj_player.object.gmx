<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Criando variáveis do objeto;
// velocidade do jogador;
velocidade = 5;
// controle de tiros;
is_firing = false;
fire_rate = 10;

// old School Firing Delay
firingDelay = 0;
firingDelayMax = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// condicionais para verificar movimentação do personagem;
if(keyboard_check(vk_left)){
    // Código para movimentação de personagens para a esquerda.
    if( x &gt; view_xview[0]){
        x -= (velocidade * 0.8); // velocidade da nave.
    }
}
if(keyboard_check(vk_right)){
    if(x &lt;= view_xview[0] + view_wview[0]){
        x += velocidade;
    }
}
if(keyboard_check(vk_up)){ 
    if(y &gt; (sprite_height / 1.5)){
        y -= velocidade;
    }
};
if(keyboard_check(vk_down)){ 
    if((y + (sprite_height/2.5)) &lt; room_height){
        y += velocidade;
    }
};

// Codigo verificação atirar balas
if(keyboard_check(vk_space)){
    if(firingDelay &gt; 0){
        firingDelay -= 1;
    }else{
        bullet1 = instance_create(obj_player.x,obj_player.y,obj_player_laser);
        firingDelay = firingDelayMax;
    }
}else{
    firingDelay = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
